using System;
using System.IO;
using System.Net;
using System.Text;
using System.Security.Cryptography;

using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Parameters;
using Org.BouncyCastle.OpenSsl;
using Org.BouncyCastle.Security;

namespace COLDDRAW
{
    class Program
    {

        public static RSACryptoServiceProvider ImportPublicKey(string pem)
        {
            PemReader pr = new PemReader(new StringReader(pem));
            AsymmetricKeyParameter publicKey = (AsymmetricKeyParameter)pr.ReadObject();
            RSAParameters rsaParams = DotNetUtilities.ToRSAParameters((RsaKeyParameters)publicKey);

            RSACryptoServiceProvider csp = new RSACryptoServiceProvider();// cspParams);
            csp.ImportParameters(rsaParams);
            return csp;
        }

        public static RSACryptoServiceProvider ImportPrivateKey(string pem)
        {
            PemReader pr = new PemReader(new StringReader(pem));
            AsymmetricCipherKeyPair KeyPair = (AsymmetricCipherKeyPair)pr.ReadObject();
            RSAParameters rsaParams = DotNetUtilities.ToRSAParameters((RsaPrivateCrtKeyParameters)KeyPair.Private);

            RSACryptoServiceProvider csp = new RSACryptoServiceProvider();// cspParams);
            csp.ImportParameters(rsaParams);
            return csp;
        }

        static void Main(string[] args)
        {
            string header = @"
================================================================================
                    THIS FILE HAS BEEN ENCRYPTED BY COLDDRAW
================================================================================    
            ";

            string rsaPubKeyTxt = @"-----BEGIN PUBLIC KEY-----
            MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDOHfrpsB3dh0u3G5eXzd2HTXNy
            uXDKEK1YeZzz8T3A1vP/HgoyHONSBM8eH6ISoNZ3gCfgdpfwbPxCiILTBtdtCTIe
            s2bozWjk5caI3LKa3XDVZEbWDolWEzFBmOAVxOneevZbW80gNRgvzks6GXMRv3v1
            XWp5gWGDxy0n+aDJlQIDAQAB
            -----END PUBLIC KEY-----";
            
            string rsaPrivKeyTxt = @"-----BEGIN RSA PRIVATE KEY-----
            MIICXgIBAAKBgQDOHfrpsB3dh0u3G5eXzd2HTXNyuXDKEK1YeZzz8T3A1vP/Hgoy
            HONSBM8eH6ISoNZ3gCfgdpfwbPxCiILTBtdtCTIes2bozWjk5caI3LKa3XDVZEbW
            DolWEzFBmOAVxOneevZbW80gNRgvzks6GXMRv3v1XWp5gWGDxy0n+aDJlQIDAQAB
            AoGBAI5q0qtToF8oE93yd71RZocNsf6MOW21NkFSzmsTvkqXe8JEHGFh6oQKhJ3Y
            16Ctd2LcrzD+YJ+kfmzubA6pxID6CS+LJfQ1XzHLJ0Pp9U5T3t9rpN987H1q8wSB
            Z5RhiXp/AfR1UyEbM4QweOzE6MCxDtHusc4/19BDZEiZXh4lAkEA6K0P8UhRLuf7
            9di3vz88D96wby2aCnXTRgDry1zUno3CdEPyOsnkOKz1mtFGNrO3KAJSm9fTcbiY
            UehgM5L15wJBAOLHXMLYkWpk/LXrdYNFivLr3HTEJTSzX8EGqW+Tj1cpAj/2cLVg
            Hb6UQ0CL1qXKToASthClxMFPVh5PxrIiHSMCQQDE4qy63xbTOjparifODRQl2aoy
            acQPVeSRN/ZO/x5rjEkfWN+AH5ae3rx1ZOClKS2zDUQZ22dws2Mw7BF7kr/BAkA2
            L2Jnn+1m2YhUQ1VJr1Ua4+ZB9Bfbtrw7V8cmRMCsF71U4SJfA/83aR+EjaUU6fjF
            uzLLWYBgm/88sN0N9P63AkEAg/G3OVBZOTYiOB2RV0G51H/YFh008BddSzzIHbnP
            MFIERIyCQFle6jvI2O2yS9mgDg3X+zQ8eLJ3pSJx8RgX7g==
            -----END RSA PRIVATE KEY-----";

            StringBuilder sb = new StringBuilder();

            WebClient client = new WebClient();
            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
            client.Headers.Add(HttpRequestHeader.UserAgent, "Other");
            client.Headers.Add(HttpRequestHeader.Accept, "application/pdf");
            byte[] fileBytes = client.DownloadData("https://www.fortynorthsecurity.com/CompanyInfo/simulatedfile.txt");

            //https://t-phitakgul.medium.com/c-rsa-encryption-decryption-with-my-own-key-dab2d1f4df1b

            RSACryptoServiceProvider rsaPubKey = ImportPublicKey(rsaPubKeyTxt);

            RSACryptoServiceProvider rsaPrivKey = ImportPrivateKey(rsaPrivKeyTxt);
            
            sb.AppendLine(header);
            sb.AppendLine(Convert.ToBase64String(
                rsaPubKey.Encrypt(
                    client.DownloadData("https://www.fortynorthsecurity.com/CompanyInfo/simulatedfile.txt")
                    , false)));

            File.WriteAllText($"{Directory.GetCurrentDirectory()}\\ENCRYPTED.cuba", sb.ToString());
        }
    }
}
